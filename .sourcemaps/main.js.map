{"version":3,"sources":["../../src/providers/multible/multible.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/list/list.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/components/blelist/blelist.ts","../../src/app/map-to-iterable-pipe/map-to-iterable-pipe.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport { BLE } from '@ionic-native/ble';\nimport { Storage } from '@ionic/storage';\nimport { Observable } from 'rxjs/Observable';\n\nexport class BLEDeviceInfo {\n  public name: string;\n  public id: string;\n  public connected: boolean = false;\n  public connecting: boolean = false;\n  public stored: boolean = false;\n}\n\n/*\n  Generated class for the MultiBLEProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class MultiBLEProvider {\n  public devices: any = { }; \n  public device_ids: string[] = [];\n  public stored_devices: any = { };\n  public scanning: boolean = false;\n  public isEnabled: boolean = false;\n  public reconnecting: boolean = false;\n  public STORAGE_KEY: string = \"multible_devices\";\n\n  constructor(private ble: BLE, private storage: Storage, private zone: NgZone) {\n    this.zone = new NgZone({ enableLongStackTrace: false });\n    this.checkBluetooth();\n    this.storage.ready().then(\n        (ready_data) => {\n            this.storage.get(this.STORAGE_KEY).then(\n                (data) => {\n                    if (data) {\n                        this.stored_devices = data;\n                        console.log(\"MultiBLEProvider::constructor loaded stored devices\", data);\n                        this.devices = this.stored_devices;\n                        for (var device_id of Object.keys(this.devices)) {\n                            this.devices[device_id].connected = false;\n                            this.devices[device_id].connecting = false;\n                            this.devices[device_id].stored = true;\n                        }\n                        this.zone.run(\n                            () => {\n                                this.device_ids = Object.keys(this.devices);\n                            }\n                        );\n                        this.reconnectAll();\n                    }\n                },\n                (error) => {\n                    console.log(\"MultiBLEProvider::constructor could not retrieve stored devices\", error);\n                }\n            );\n        }\n    );\n  }\n\n  disconnectAll() {\n    for (var device_id of Object.keys(this.devices)) {\n        if (this.devices[device_id].connected) {\n            this.disconnect(device_id);\n        }\n    }\n  }\n\n  forgetAll() {\n    this.disconnectAll();\n    for (var device_id of Object.keys(this.devices)) {\n        this.devices[device_id].stored = false;\n    }\n    this.stored_devices = { };\n    this.storage.set(this.STORAGE_KEY, this.stored_devices).then(\n        (data) => {\n            console.log(\"MultiBLEProvider::forgetAll success\", data);\n            this.storage.get(this.STORAGE_KEY).then(\n            (data) => { console.log(\"MultiBLEProvider::forgetAll storage is now\", data); }\n            );\n        },\n        (error) => {\n            console.log(\"MultiBLEProvider::forgetAll failure\", error);\n        }\n    );\n    \n  }\n\n  reconnectAll() {\n    if (this.isEnabled && !this.reconnecting && Object.keys(this.stored_devices).length > 0) {\n        console.log(\"MultiBLEProvider::reconnectAll initiating reconnect for stored_devices\", Object.keys(this.stored_devices));\n        this.reconnecting = true;\n        var connection_callback = () => {\n            var connecting = false;\n            for (var device_id of Object.keys(this.stored_devices)) {\n                connecting = connecting || this.devices[device_id].connecting;\n            }\n            this.reconnecting = connecting;\n            if (!this.reconnecting) {\n                console.log(\"MultiBLEProvider::reconnectAll finished\");\n                this.stopScan();\n            }\n        };\n        for (var device_id of Object.keys(this.stored_devices)) {\n            if (!this.devices[device_id].connected && !this.devices[device_id].connecting) {\n                console.log(\"MultiBLEProvider::reconnectAll attempting\", this.devices[device_id]);\n                this.connect(device_id).subscribe(\n                    connection_callback,\n                    connection_callback,\n                    connection_callback\n                );\n            } else {\n                console.log(\"MultiBLEProvider::reconnectAll skipping\", this.devices[device_id]);\n            }\n        }    \n    } else {\n        console.log(\"MultiBLEProvider::reconnectAll already in progress\");\n    }\n  }\n\n  checkBluetooth() {\n    this.ble.isEnabled().then(\n        (data) => {\n            console.log(\"MultiBLEProvider::constructor bluetooth enabled\");\n            this.isEnabled = true;\n            this.reconnectAll();\n        },\n        (error) => {\n            console.log(\"MultiBLEProvider::constructor bluetooth disabled\");\n            this.isEnabled = false;\n            this.zone.run(\n                () => {\n                    for (var device_id of Object.keys(this.devices)) {\n                        this.devices[device_id].connected = false;\n                        this.devices[device_id].connecting = false;\n                    }\n                }\n            );\n        }\n    );\n  }\n\n  enableBluetooth() {\n    this.ble.enable().then(\n        (data) => {\n            this.checkBluetooth();\n        },\n        (error) => {\n            this.checkBluetooth();\n        }\n    );\n  }\n\n  saveDevice(deviceId: string) {\n    this.devices[deviceId].stored = true;\n    if (this.devices[deviceId]) {\n        this.stored_devices[deviceId] = this.devices[deviceId];\n        this.storage.set(this.STORAGE_KEY, this.stored_devices).then(\n            (data) => {\n                console.log(\"MultiBLEProvider::saveDevice success\", data);\n            },\n            (error) => {\n                console.log(\"MultiBLEProvider::saveDevice error\", error);\n            }\n        );\n    }\n  }\n\n  forgetDevice(deviceId: string) {\n    if (this.devices[deviceId]) {\n        this.devices[deviceId].stored = false;\n    }\n    if (this.stored_devices[deviceId]) {\n        delete this.stored_devices[deviceId];\n        this.storage.set(this.STORAGE_KEY, this.stored_devices).then(\n            (data) => {\n                console.log(\"MultiBLEProvider::forgetDevice success\", data);\n            },\n            (error) => {\n                console.log(\"MultiBLEProvider::forgetDevice error\", error);\n            }\n        );\n    }\n  }\n\n  // ASCII only\n  stringToBytes(string) {\n    var array = new Uint8Array(string.length);\n    for (var i = 0, l = string.length; i < l; i++) {\n        array[i] = string.charCodeAt(i);\n    }\n    return array.buffer;\n  }\n\n  // ASCII only\n  bytesToString(buffer) {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  stopScan() {\n    this.ble.stopScan().then(\n        (data) => {\n            this.zone.run(\n                () => {\n                    this.scanning = false;\n                    this.device_ids = Object.keys(this.devices);\n                    console.log(\"MultiBLEProvider::stopScan\");\n                }\n            );\n        }\n    );\n  }\n\n  startScan(services: string[] = []) {\n    this.scanning = true;\n    this.ble.startScan(services).subscribe(\n        (data) => {\n            this.zone.run(\n                () => {\n                    if (data.id in Object.keys(this.devices)) {\n                        console.log(\"MultiBLEProvider::startScan refreshing device\", data);\n                        if (data.name != this.devices[data.id].name) {\n                            this.devices[data.id].name = data.name;\n                            this.device_ids = Object.keys(this.devices);\n                        }\n                    } else {\n                        console.log(\"MultiBLEProvider::startScan found new device\", data);\n                        var device = new BLEDeviceInfo();\n                        device.id = data.id;\n                        if (data.name) {\n                            device.name = data.name;\n                        }\n                        this.devices[data.id] = device;\n                        this.device_ids = Object.keys(this.devices);\n                        console.log(\"new device_ids\", this.device_ids);\n                    }\n                    if (data.id in Object.keys(this.stored_devices) && !this.devices[data.id].connected) {\n                        console.log(\"MultiBLEProvider::startScan reconnecting to stored device\", device.id);\n                        this.connect(data.id);\n                    }\n                }\n            );\n        },\n        (error) => {\n            console.log(\"MultiBLE::startScan error: \", error);\n        },\n        () => {\n            console.log(\"MultiBLE::startScan finished\");\n            this.zone.run(\n                () => {\n                    this.scanning = false;\n                }\n            );\n        }\n    );\n    setTimeout(\n        () => {\n            this.stopScan();\n        },\n        10000\n    );\n  }\n\n  disconnect(deviceId: string) {\n    console.log(\"MultiBLEProvider::disconnect\", deviceId);\n    return new Promise(\n        (resolve, reject) => {\n            this.ble.disconnect(deviceId).then(\n                (data) => {\n                    this.zone.run(\n                        () => {\n                            this.devices[deviceId].connected = false;\n                            this.device_ids = Object.keys(this.devices);\n                        }\n                    );\n                    this.forgetDevice(deviceId);\n                    resolve(data);\n                },\n                (error) => {\n                    reject(error);\n                }\n            );\n        }\n    );\n  }\n\n  connect(deviceId: string) {\n    console.log(\"MultiBLEProvider::connect initiating\", deviceId);\n    this.zone.run(\n        () => {\n            this.devices[deviceId].connecting = true;\n            this.device_ids = Object.keys(this.devices);\n        }\n    );\n    return new Observable(\n        (observer) => { \n            this.ble.connect(deviceId).subscribe( \n                (data) => {\n                    console.log(\"MultiBLEProvider::connect success\", data);\n                    this.zone.run(\n                        () => {\n                            this.saveDevice(deviceId);\n                            this.devices[deviceId].connected = true; \n                            this.devices[deviceId].connecting = false;\n                        }\n                    );\n                    observer.next(data);\n                },\n                (error) => {\n                    console.log(\"MultiBLEProvider::connect error\", error);\n                    this.zone.run(\n                        () => {\n                            this.devices[deviceId].connected = false; \n                            this.devices[deviceId].connecting = false;\n                        }\n                    );\n                    observer.error(error);\n                },\n                () => {\n                    console.log(\"MultiBLEProvider::connect finished for device\", deviceId);\n                    this.zone.run(\n                        () => {\n                            this.devices[deviceId].connected = false;\n                            this.devices[deviceId].connecting = false;\n                        }\n                    );\n                    observer.complete();\n                }\n            );\n        }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/multible/multible.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 111\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { BLEListComponent } from '../../components/blelist/blelist';\nimport { MultiBLEProvider } from '../../providers/multible/multible';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  public currentId: string = \"30:AE:A4:14:50:96\";\n\n  constructor(public navCtrl: NavController, private multible: MultiBLEProvider) {\n\n  }\n\n  deviceSelected(device_id: string) {\n    console.log(\"HomePage::deviceSelected\", device_id);\n    this.multible.connect(device_id).subscribe(\n        (data) => {\n            console.log(\"HomePage::deviceSelected connection data\", data);\n        },\n        (error) => {\n            console.log(\"HomePage::deviceSelected connection error\", error);\n        },\n        () => {\n            console.log(\"HomePage::deviceSelected connection finished\");\n        }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  selectedItem: any;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n\n    this.items = [];\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event, item) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(ListPage, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { BLE } from '@ionic-native/ble';\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport { MultiBLEProvider } from '../providers/multible/multible';\nimport { BLEListComponent } from '../components/blelist/blelist';\nimport { MapToIterable } from './map-to-iterable-pipe/map-to-iterable-pipe';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ListPage,\n    BLEListComponent,\n    MapToIterable,\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ListPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    BLE,\n    MultiBLEProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport { ListPage } from '../pages/list/list';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp();\n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Home', component: HomePage },\n      { title: 'List', component: ListPage }\n    ];\n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component, NgZone, Input, Output, EventEmitter } from '@angular/core';\nimport { MultiBLEProvider } from '../../providers/multible/multible';\n\n\n/**\n * Generated class for the BlelistComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'blelist',\n  templateUrl: 'blelist.html'\n})\nexport class BLEListComponent {\n\n  @Input('currentId') currentId: String;\n  @Output() select = new EventEmitter();\n\n\n  constructor(private multible: MultiBLEProvider) {\n    this.multible.startScan();\n  }\n\n  emitSelect(device: any) {\n    this.select.emit(device);\n  }\n\n  enableBluetooth() {\n    console.log(\"BLEListComponent::enableBluetooth\");\n    this.multible.enableBluetooth();\n  }\n\n  stopScanning() {\n    console.log(\"BLEListComponent::stopScanning\");\n    this.multible.stopScan();\n  }\n\n  startScanning() {\n    console.log(\"BLEListComponent::startScanning\");\n    this.multible.startScan();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/blelist/blelist.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mapToIterable'\n})\nexport class MapToIterable {\ntransform(dict: Object): Array< Object > {\n    var a = [];\n    for (var key in dict) {\n      if (dict.hasOwnProperty(key)) {\n        a.push({key: key, val: dict[key]});\n      }\n    }\n    return a;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/map-to-iterable-pipe/map-to-iterable-pipe.ts"],"sourceRoot":""}